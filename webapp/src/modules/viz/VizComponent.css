/* Sidekick/webapp/src/modules/viz/VizComponent.css */

.viz-variable-list {
    display: flex;
    flex-direction: column;
    gap: 8px; /* Spacing between variable items */
}

.viz-variable-item {
    padding: 8px;
    border: 1px solid #eee;
    border-radius: 4px;
    background-color: #fdfdfd; /* Base background for the whole variable row */
    line-height: 1.4;
}

.viz-variable-name {
    font-weight: bold;
    color: #5a2de8; /* Variable name color */
    margin-right: 5px;
    vertical-align: top; /* Align with the value container */
}

.viz-value-container {
    display: inline-block; /* Keep value next to name */
    margin-left: 5px;
    position: relative;
    padding-left: 5px; /* Indentation for nested structures */
    border-left: 1px dotted #ccc; /* Visual guide for nesting */
    vertical-align: top; /* Align with variable name */
    border-radius: 3px; /* Apply rounding to value containers too */
}

.viz-value-container:hover {
    background-color: #f9f9f9; /* Subtle hover effect */
}

/* Resting style for values explicitly tracked by ObservableValue */
.observable-tracked {
    border: 1px solid #7aa5e2; /* Blue border */
    /* Resting background color */
    background-color: #eef4ff; /* Light blue background */
    padding: 3px 5px; /* Padding inside the blue box */
    /* display: inline-block; */ /* Let layout flow, might wrap */
}

/* Highlighting animation */
@keyframes viz-highlight-fade {
    from { background-color: #e0d4ff; } /* Slightly more saturated purple - Start */
    to { background-color: transparent; } /* Fade to transparent (will reveal resting .observable-tracked background) */
}

/* Class applied temporarily to the specific viz-value-container that changed */
.viz-highlight-node {
    animation: viz-highlight-fade 1.5s ease-out; /* REMOVED 'forwards' */
    /* Optional: slightly change border during highlight */
    /* border-color: #b8a1f0; */
}


.viz-expand-button {
    background: none; border: none; cursor: pointer;
    padding: 0 5px 0 0; font-size: 0.8em; color: #666;
    margin-right: 3px; vertical-align: middle;
}

.viz-type-indicator {
    color: #888; font-style: italic; margin-right: 3px;
}

/* Styling for primitive values rendered directly */
.viz-value-inline {
    margin-left: 3px;
}
.viz-value-primitive {}
.viz-value-string { color: #2a9d8f; }
.viz-value-number { color: #e76f51; }
.viz-value-boolean { color: #f4a261; font-weight: bold; }
.viz-value-none { color: #aaa; font-style: italic; }
.viz-type-truncated, .viz-type-error, .viz-type-recursive_ref, .viz-type-unknown-primitive { color: #e63946; font-style: italic; }
.viz-type-object { color: #666; } /* For object type indicator */
.viz-type-repr { color: #666; } /* For repr type indicator */


/* List/Dict/Set/Object rendering (when expanded) */
.viz-list, .viz-dict, .viz-set, .viz-object {
    margin-left: 15px; padding-left: 10px;
    border-left: 1px solid #eee;
    display: flex; flex-direction: column; gap: 3px;
    margin-top: 3px; /* Add space below the type indicator when expanded */
}

.viz-list-item, .viz-dict-item, .viz-set-item, .viz-object-item {
    padding: 2px 0;
}

.viz-list-index {
    color: #999;
    margin-right: 5px;
    display: inline-block;
    min-width: 1.5em; /* Align indices nicely */
    text-align: right;
}

/* Styling for Dictionary Keys */
.viz-dict-key {
    margin-right: 5px;
    display: inline-block;
    vertical-align: top;
}
/* Add colon *after* the key's value container */
.viz-dict-item > .viz-dict-key::after {
    content: ":";
    color: #555;
    margin-left: 2px;
    font-weight: bold;
}

/* Styling for Object Attributes */
.viz-attr-name { color: #4a5568; font-style: italic; }
/* Add colon *after* the attribute name span */
.viz-object-item > .viz-dict-key.viz-attr-name::after {
    content: ":";
    color: #555;
    margin-left: 2px;
    font-weight: normal; /* Reset potential bolding */
    font-style: normal; /* Reset potential italics */
}

.viz-set-item {}
.viz-error { color: red; font-style: italic; }
.viz-empty-message { color: #888; font-style: italic; padding: 10px; }